/**
 * Firestore 보안 규칙 템플릿 - 학생 실습용
 * 주차별로 구현해주세요!
 */

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================================================
    // 3주차 TODO: 기본 사용자 데이터 접근 제어 구현
    // ============================================================================

    /**
     * 사용자 프로필 접근 제어
     * TODO: 3주차에 구현하세요
     *
     * 요구사항:
     * 1. 인증된 사용자만 접근 가능
     * 2. 본인의 데이터만 읽기/쓰기 가능
     * 3. 회원가입 시 사용자 ID 검증
     */
    // match /users/{userId} {
    //   // TODO: 읽기 권한 구현
    //   // allow read: if ???;
    //
    //   // TODO: 쓰기 권한 구현
    //   // allow write: if ???;
    //
    //   // TODO: 생성 권한 구현
    //   // allow create: if ???;
    // }

    // ============================================================================
    // 4주차 TODO: 건강 데이터 접근 제어 구현
    // ============================================================================

    /**
     * 건강 데이터 접근 제어
     * TODO: 4주차에 구현하세요
     *
     * 요구사항:
     * 1. 데이터 소유자만 접근 가능
     * 2. 보호자 권한이 있는 경우 시니어 데이터 접근 가능
     * 3. 생성 시 사용자 ID 검증
     */
    // match /healthData/{dataId} {
    //   // TODO: 건강 데이터 접근 규칙 구현
    // }

    // ============================================================================
    // 5주차 TODO: 파일 업로드 관련 메타데이터 접근 제어
    // ============================================================================

    /**
     * 음성 파일 메타데이터 접근 제어
     * TODO: 5주차에 구현하세요
     *
     * 요구사항:
     * 1. 파일 소유자만 접근 가능
     * 2. AI 분석 시스템이 읽기 가능
     * 3. 처리 상태 업데이트 권한 관리
     */
    // match /voiceFiles/{fileId} {
    //   // TODO: 음성 파일 메타데이터 접근 규칙 구현
    // }

    /**
     * AI 분석 결과 접근 제어
     * TODO: 5주차에 구현하세요
     */
    // match /analyses/{analysisId} {
    //   // TODO: AI 분석 결과 접근 규칙 구현
    // }

    // ============================================================================
    // 6주차 TODO: 알림 및 시스템 데이터 접근 제어
    // ============================================================================

    /**
     * 알림 데이터 접근 제어
     * TODO: 6주차에 구현하세요
     */
    // match /notifications/{notificationId} {
    //   // TODO: 알림 접근 규칙 구현
    // }

    /**
     * 시스템 로그 접근 제어
     * TODO: 6주차에 구현하세요
     */
    // match /systemLogs/{logId} {
    //   // TODO: 시스템 로그 접근 규칙 구현
    // }

    // ============================================================================
    // 보안 함수들 (참고용 - 주차별로 사용하세요)
    // ============================================================================

    /**
     * 기본 인증 확인 함수
     * 모든 규칙에서 사용할 수 있는 기본 함수
     */
    function isAuthenticated() {
      return request.auth != null;
    }

    /**
     * 사용자 소유권 확인 함수
     * 데이터의 소유자인지 확인
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * 사용자 타입 확인 함수
     * Custom Claims에서 사용자 타입 반환
     */
    function getUserType() {
      return request.auth.token.userType;
    }

    /**
     * 보호자 권한 확인 함수
     * TODO: 4주차에 구현 방법 학습
     */
    function isCaregiver() {
      return getUserType() == "caregiver";
    }

    /**
     * 시스템 서비스 권한 확인 함수
     * TODO: 5주차에 AI 서비스 연동 시 사용
     */
    function isSystemService() {
      return request.auth.token.role == "system";
    }
  }
}

// ============================================================================
// 🚨 중요 보안 가이드라인
// ============================================================================

/**
 * 1. 기본 원칙:
 *    - 모든 접근에는 인증이 필요합니다
 *    - 사용자는 자신의 데이터만 접근할 수 있습니다
 *    - 읽기/쓰기 권한을 분리하여 관리하세요
 *
 * 2. 테스트 방법:
 *    - Firebase 에뮬레이터에서 테스트하세요
 *    - 다양한 사용자 시나리오로 테스트하세요
 *    - 권한이 없는 접근을 시도해보세요
 *
 * 3. 디버깅 팁:
 *    - 콘솔에서 보안 규칙 로그를 확인하세요
 *    - 규칙이 너무 복잡하지 않게 단순하게 시작하세요
 *    - 단계별로 규칙을 추가하며 테스트하세요
 */