# AI 분석 프로젝트용 설정 파일

[flake8]
# 최대 라인 길이 (Black과 일치)
max-line-length = 88

# 제외할 디렉토리
exclude = 
    .git,
    __pycache__,
    venv,
    .venv,
    env,
    .env,
    .pytest_cache,
    build,
    dist,
    *.egg-info

# 무시할 에러 코드
# E203: 슬라이스에서 공백 (Black과 충돌)
# W503: 바이너리 연산자 전 줄바꿈 (Black과 충돌)  
# E501: 라인 길이 (max-line-length로 관리)
extend-ignore = E203, W503, E501

# 라인당 최대 복잡도
max-complexity = 10

# import 순서 체크
import-order-style = google

# docstring 체크
docstring-convention = google

[mypy]
# Python 버전
python_version = 3.9

# 엄격한 타입 체크
strict = true

# 누락된 import 무시
ignore_missing_imports = true

# 제외할 모듈  
exclude = venv/,\.venv/,\.pytest_cache/,build/,dist/

# 경고 설정
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true

[tool:pytest]
# 테스트 디렉토리
testpaths = tests

# 테스트 파일 패턴
python_files = test_*.py *_test.py

# 테스트 클래스 패턴
python_classes = Test*

# 테스트 함수 패턴
python_functions = test_*

# 테스트 옵션
addopts = --verbose -v

# 마커 정의
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    firebase: Tests requiring Firebase connection

[coverage:run]
# 커버리지 소스
source = analysis, models, utils

# 제외할 파일
omit = 
    */tests/*
    */test_*
    */__init__.py
    */venv/*
    */conftest.py

[coverage:report]
# 누락된 라인 표시
show_missing = true

# 제외할 라인 패턴
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[isort]
# Black 호환 프로필
profile = black

# 라인 길이
line_length = 88

# 멀티라인 출력 모드
multi_line_output = 3

# 후행 쉼표 포함
include_trailing_comma = true

# 문자열 인용 정규화
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Import 그룹 순서
known_first_party = analysis,models,utils
known_third_party = firebase_admin,google,openai,pytest,pydantic 